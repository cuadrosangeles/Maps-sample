scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "CTA Trains complaints")
ggplot(data = filter(no_sw_trains, !is.na(bing))) +
geom_histogram(aes(bing), stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "Federal Reserve Sentiment (BING): Sep 2019")
ggplot(data = filter(no_sw_buses, !is.na(afinn))) +
geom_histogram(aes(afinn), stat = "count") +
scale_x_continuous(n.breaks = 7) +
labs(title = "Federal Reserve Sentiment (AFINN): Sep 2019")
ggplot(data = filter(no_sw_buses, !is.na(affin))) +
geom_histogram(aes(affin), stat = "count") +
scale_x_continuous(n.breaks = 7) +
labs(title = "Federal Reserve Sentiment (AFINN): Sep 2019")
ggplot(data = filter(no_sw_trains, !is.na(affin))) +
geom_histogram(aes(affin), stat = "count") +
scale_x_continuous(n.breaks = 7) +
labs(title = "Federal Reserve Sentiment (AFINN): Sep 2019")
library(tidyverse)
library(tidytext)
rm(list = ls())
setwd("~/Documents/GitHub/final-project-james-emmanuel-oscar/Data")
#Using the comments on the complaints from the organization ctaction.org we are
#going to run a sentiment analysis and compare the differences between the two,
#buses and trains.
#separating buses and trains complaints from the excel file
complaints_buses <- readxl::read_excel("Aug-SeptCTAdata.xlsx", sheet = 1)
complaints_trains <- readxl::read_excel("Aug-SeptCTAdata.xlsx", sheet = 2)
#giving column names
colnames(complaints_buses) <- c("date", "route", "delay", "comments")
colnames(complaints_trains) <- c("date", "station", "region", "delay", "comments")
#around 50% of the complaints do not have a comment, so we will drop NAs from the
#comments and prepare the comments for the sentiment analysis
bus_comments <- complaints_buses %>%
drop_na(comments) %>%
subset(select = -c(date, route, delay))
train_comments <- complaints_trains %>%
drop_na(comments) %>%
subset(select = -c(date, station, region, delay))
#sentiment analysis for bus and train comments
cta_complaints <- list(bus_comments, train_comments)
text_complaints <- list()
tibble_complaints <- list()
word_tokens_cta_comp <- list()
no_sw_compl <- list()
for (i in seq_along(cta_complaints)) {
text_complaints[[i]] <- paste(unlist(cta_complaints[[i]][["comments"]]), collapse =" ")
tibble_complaints[[i]] <- tibble(text = text_complaints[[i]])
word_tokens_cta_comp[[i]] <- unnest_tokens(tibble_complaints[[i]], word_tokens, text, token = "words")
no_sw_compl[[i]] <- anti_join(word_tokens_cta_comp[[i]], stop_words, by = c("word_tokens" = "word"))
}
sentiment_nrc <- get_sentiments("nrc") %>%
rename(nrc = sentiment)
sentiment_afinn <- get_sentiments("afinn") %>%
rename(afinn = value)
sentiment_bing <- get_sentiments("bing") %>%
rename(bing = sentiment)
View(sentiment_afinn)
View(sentiment_bing)
View(sentiment_nrc)
View(sentiment_nrc)
#adding the sentiment analysis models
sentiment_analysis <- list()
for (i in seq_along(no_sw_compl)) {
sentiment_analysis[[i]] <- left_join(sentiment_nrc, by = c("word_tokens" = "word"))
sentiment_analysis[[i]] <- left_join(sentiment_afinn, by = c("word_tokens" = "word"))
sentiment_analysis[[i]] <- left_join(sentiment_bing, by = c("word_tokens" = "word"))
}
for (i in seq_along(no_sw_compl)) {
no_sw_compl[[i]] <- left_join(sentiment_nrc, by = c("word_tokens" = "word"))
no_sw_compl[[i]] <- left_join(sentiment_afinn, by = c("word_tokens" = "word"))
no_sw_compl[[i]] <- left_join(sentiment_bing, by = c("word_tokens" = "word"))
}
sentiment_analysis <- list()
for (i in seq_along(no_sw_compl)) {
sentiment_analysis[[i]] <- left_join(no_sw_compl[[i]], sentiment_nrc, by = c("word_tokens" = "word"))
sentiment_analysis[[i]] <- left_join(no_sw_compl[[i]], sentiment_afinn, by = c("word_tokens" = "word"))
sentiment_analysis[[i]] <- left_join(no_sw_compl[[i]], sentiment_bing, by = c("word_tokens" = "word"))
}
View(sentiment_analysis)
view(sentiment_analysis[[1]])
view(sentiment_analysis[[2]])
View(sentiment_analysis)
view(sentiment_analysis[[1]][["word_tokens"]])
view(sentiment_analysis[[1]][["word_tokens"]])
view(sentiment_analysis[[1]])
library(tidyverse)
library(tidytext)
library(nametagger)
library(udpipe)
library(rvest)
rm(list = ls())
setwd("~/Documents/GitHub/final-project-james-emmanuel-oscar/Data")
#Using the comments on the complaints from the organization ctaction.org we are
#going to run a sentiment analysis and compare the differences between the two,
#buses and trains.
#separating buses and trains complaints from the excel file
complaints_buses <- readxl::read_excel("Aug-SeptCTAdata.xlsx", sheet = 1)
complaints_trains <- readxl::read_excel("Aug-SeptCTAdata.xlsx", sheet = 2)
#giving column names
colnames(complaints_buses) <- c("date", "route", "delay", "comments")
colnames(complaints_trains) <- c("date", "station", "region", "delay", "comments")
#around 50% of the complaints do not have a comment, so we will drop NAs from the
#comments and prepare the comments for the sentiment analysis
bus_comments <- complaints_buses %>%
drop_na(comments) %>%
subset(select = -c(date, route, delay))
train_comments <- complaints_trains %>%
drop_na(comments) %>%
subset(select = -c(date, station, region, delay))
#sentiment analysis of bus comments
text_buses <- paste(unlist(bus_comments), collapse =" ")
tibble_buses <- tibble(text = text_buses)
word_tokens_buses <- unnest_tokens(tibble_buses, word_tokens,  text, token = "words")
count(word_tokens_buses, word_tokens, sort = TRUE)
no_sw_buses <- anti_join(word_tokens_buses, stop_words, by = c("word_tokens" = "word"))
count(no_sw_buses, word_tokens, sort = TRUE)
#parsed_buses <- udpipe(text_buses, "english")
#buses_clean <- filter(parsed_buses, upos != "PUNCT")
#sentiment analysis of train comments
text_trains <- paste(unlist(train_comments), collapse =" ")
tibble_trains <- tibble(text = text_trains)
word_tokens_trains <- unnest_tokens(tibble_trains, word_tokens,  text, token = "words")
count(word_tokens_trains, word_tokens, sort = TRUE)
no_sw_trains <- anti_join(word_tokens_trains, stop_words, by = c("word_tokens" = "word"))
count(no_sw_trains, word_tokens, sort = TRUE)
#finding matching words from the NRC model
sentiment_nrc <-
get_sentiments("nrc") %>%
rename(nrc = sentiment)
sentiment_afinn <-
get_sentiments("afinn") %>%
rename(affin = value)
sentiment_bing <-
get_sentiments("bing") %>%
rename(bing = sentiment)
no_sw_buses <- no_sw_buses %>%
left_join(sentiment_nrc, by = c("word_tokens" = "word")) %>%
left_join(sentiment_afinn, by = c("word_tokens" = "word")) %>%
left_join(sentiment_bing, by = c("word_tokens" = "word"))
View(no_sw_buses)
library(tidyverse)
library(tidytext)
rm(list = ls())
setwd("~/Documents/GitHub/final-project-james-emmanuel-oscar/Data")
#Using the comments on the complaints from the organization ctaction.org we are
#going to run a sentiment analysis and compare the differences between the two,
#buses and trains.
#separating buses and trains complaints from the excel file
complaints_buses <- readxl::read_excel("Aug-SeptCTAdata.xlsx", sheet = 1)
complaints_trains <- readxl::read_excel("Aug-SeptCTAdata.xlsx", sheet = 2)
#giving column names
colnames(complaints_buses) <- c("date", "route", "delay", "comments")
colnames(complaints_trains) <- c("date", "station", "region", "delay", "comments")
#around 50% of the complaints do not have a comment, so we will drop NAs from the
#comments and prepare the comments for the sentiment analysis
bus_comments <- complaints_buses %>%
drop_na(comments) %>%
subset(select = -c(date, route, delay))
train_comments <- complaints_trains %>%
drop_na(comments) %>%
subset(select = -c(date, station, region, delay))
#sentiment analysis for bus and train comments
cta_complaints <- list(bus_comments, train_comments)
text_complaints <- list()
tibble_complaints <- list()
word_tokens_cta_comp <- list()
no_sw_compl <- list()
for (i in seq_along(cta_complaints)) {
text_complaints[[i]] <- paste(unlist(cta_complaints[[i]][["comments"]]), collapse =" ")
tibble_complaints[[i]] <- tibble(text = text_complaints[[i]])
word_tokens_cta_comp[[i]] <- unnest_tokens(tibble_complaints[[i]], word_tokens, text, token = "words")
no_sw_compl[[i]] <- anti_join(word_tokens_cta_comp[[i]], stop_words, by = c("word_tokens" = "word"))
}
view(no_sw_compl[[2]])
#loading the sentiment analysis models
sentiment_nrc <- get_sentiments("nrc")
sentiment_afinn <- get_sentiments("afinn")
sentiment_bing <- get_sentiments("bing")
#adding the sentiment analysis models
sentiment_nrc <- list()
sentiment_afinn <- list()
sentiment_bing <- list()
for (i in seq_along(no_sw_compl)) {
sentiment_nrc <- left_join(no_sw_compl[[i]], sentiment_nrc, by = c("word_tokens" = "word"))
sentiment_afinn <- left_join(no_sw_compl[[i]], sentiment_afinn, by = c("word_tokens" = "word"))
sentiment_bing <- left_join(no_sw_compl[[i]], sentiment_bing, by = c("word_tokens" = "word"))
}
for (i in seq_along(no_sw_compl)) {
sentiment_nrc[i] <- left_join(no_sw_compl[[i]], sentiment_nrc, by = c("word_tokens" = "word"))
sentiment_afinn[i] <- left_join(no_sw_compl[[i]], sentiment_afinn, by = c("word_tokens" = "word"))
sentiment_bing[i] <- left_join(no_sw_compl[[i]], sentiment_bing, by = c("word_tokens" = "word"))
}
for (i in seq_along(no_sw_compl)) {
sentiment_nrc[[i]] <- left_join(no_sw_compl[[i]], sentiment_nrc, by = c("word_tokens" = "word"))
sentiment_afinn[[i]] <- left_join(no_sw_compl[[i]], sentiment_afinn, by = c("word_tokens" = "word"))
sentiment_bing[[i]] <- left_join(no_sw_compl[[i]], sentiment_bing, by = c("word_tokens" = "word"))
}
for (i in seq_along(no_sw_compl)) {
sentiment_analysis <- left_join(no_sw_compl[[i]], sentiment_bing, by = c("word_tokens" = "word"))
}
library(tidyverse)
library(tidytext)
rm(list = ls())
setwd("~/Documents/GitHub/final-project-james-emmanuel-oscar/Data")
#Using the comments on the complaints from the organization ctaction.org we are
#going to run a sentiment analysis and compare the differences between the two,
#buses and trains.
#separating buses and trains complaints from the excel file
complaints_buses <- readxl::read_excel("Aug-SeptCTAdata.xlsx", sheet = 1)
complaints_trains <- readxl::read_excel("Aug-SeptCTAdata.xlsx", sheet = 2)
#giving column names
colnames(complaints_buses) <- c("date", "route", "delay", "comments")
colnames(complaints_trains) <- c("date", "station", "region", "delay", "comments")
#around 50% of the complaints do not have a comment, so we will drop NAs from the
#comments and prepare the comments for the sentiment analysis
bus_comments <- complaints_buses %>%
drop_na(comments) %>%
subset(select = -c(date, route, delay))
train_comments <- complaints_trains %>%
drop_na(comments) %>%
subset(select = -c(date, station, region, delay))
#sentiment analysis for bus and train comments
cta_complaints <- list(bus_comments, train_comments)
text_complaints <- list()
tibble_complaints <- list()
word_tokens_cta_comp <- list()
no_sw_compl <- list()
for (i in seq_along(cta_complaints)) {
text_complaints[[i]] <- paste(unlist(cta_complaints[[i]][["comments"]]), collapse =" ")
tibble_complaints[[i]] <- tibble(text = text_complaints[[i]])
word_tokens_cta_comp[[i]] <- unnest_tokens(tibble_complaints[[i]], word_tokens, text, token = "words")
no_sw_compl[[i]] <- anti_join(word_tokens_cta_comp[[i]], stop_words, by = c("word_tokens" = "word"))
}
view(no_sw_compl[[2]])
#loading the sentiment analysis models
sentiment_nrc <- get_sentiments("nrc")
sentiment_afinn <- get_sentiments("afinn")
sentiment_bing <- get_sentiments("bing")
#adding the sentiment analysis models
for (i in seq_along(no_sw_compl)) {
complaints_nrc <- left_join(no_sw_compl[[i]], sentiment_nrc, by = c("word_tokens" = "word"))
complaints_afinn <- left_join(no_sw_compl[[i]], sentiment_afinn, by = c("word_tokens" = "word"))
complaints_bing <- left_join(no_sw_compl[[i]], sentiment_bing, by = c("word_tokens" = "word"))
}
View(complaints_nrc)
View(complaints_afinn)
for (i in seq_along(no_sw_compl)) {
complaints_nrc[i] <- left_join(no_sw_compl[[i]], sentiment_nrc, by = c("word_tokens" = "word"))
complaints_afinn[i] <- left_join(no_sw_compl[[i]], sentiment_afinn, by = c("word_tokens" = "word"))
complaints_bing[i] <- left_join(no_sw_compl[[i]], sentiment_bing, by = c("word_tokens" = "word"))
}
for (i in seq_along(no_sw_compl)) {
complaints_nrc[[i]] <- left_join(no_sw_compl[[i]], sentiment_nrc, by = c("word_tokens" = "word"))
complaints_afinn[[i]] <- left_join(no_sw_compl[[i]], sentiment_afinn, by = c("word_tokens" = "word"))
complaints_bing[[i]] <- left_join(no_sw_compl[[i]], sentiment_bing, by = c("word_tokens" = "word"))
}
complaints_nrc <- list()
complaints_afinn <- list()
complaints_bing <- list()
for (i in seq_along(no_sw_compl)) {
complaints_nrc[[i]] <- left_join(no_sw_compl[[i]], sentiment_nrc, by = c("word_tokens" = "word"))
complaints_afinn[[i]] <- left_join(no_sw_compl[[i]], sentiment_afinn, by = c("word_tokens" = "word"))
complaints_bing[[i]] <- left_join(no_sw_compl[[i]], sentiment_bing, by = c("word_tokens" = "word"))
}
view(complaints_nrc[[1]])
view(complaints_nrc[[2]])
ggplot(data = filter(complaints_nrc, !is.na(nrc))) +
geom_histogram(aes(nrc), stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "CTA Buses complaints")
view(complaints_nrc[[2]])
complaints_nrc[[1]]$type <- "buses"
complaints_afinn[[1]]$type <- "buses"
complaints_bing[[1]]$type <- "buses"
complaints_nrc[[2]]$type <- "trains"
complaints_afinn[[2]]$type <- "trains"
complaints_bing[[2]]$type <- "trains"
view(complaints_nrc[[1]])
view(complaints_nrc[[1]])
view(complaints_nrc[[2]])
plot_buses <- merge(complaints_nrc[[1]], complaints_nrc[[2]])
plot_buses <- merge(complaints_nrc[[1]], complaints_nrc[[2]], by="type")
View(plot_buses)
View(no_sw_compl)
view(no_sw_compl[[2]])
library(tidyverse)
library(tidytext)
rm(list = ls())
setwd("~/Documents/GitHub/final-project-james-emmanuel-oscar/Data")
#Using the comments on the complaints from the organization ctaction.org we are
#going to run a sentiment analysis and compare the differences between the two,
#buses and trains.
#separating buses and trains complaints from the excel file
complaints_buses <- readxl::read_excel("Aug-SeptCTAdata.xlsx", sheet = 1)
complaints_trains <- readxl::read_excel("Aug-SeptCTAdata.xlsx", sheet = 2)
#giving column names
colnames(complaints_buses) <- c("date", "route", "delay", "comments")
colnames(complaints_trains) <- c("date", "station", "region", "delay", "comments")
#around 50% of the complaints do not have a comment, so we will drop NAs from the
#comments and prepare the comments for the sentiment analysis
bus_comments <- complaints_buses %>%
drop_na(comments) %>%
subset(select = -c(date, route, delay))
train_comments <- complaints_trains %>%
drop_na(comments) %>%
subset(select = -c(date, station, region, delay))
#sentiment analysis for bus and train comments
cta_complaints <- list(bus_comments, train_comments)
text_complaints <- list()
tibble_complaints <- list()
word_tokens_cta_comp <- list()
no_sw_compl <- list()
for (i in seq_along(cta_complaints)) {
text_complaints[[i]] <- paste(unlist(cta_complaints[[i]][["comments"]]), collapse =" ")
tibble_complaints[[i]] <- tibble(text = text_complaints[[i]])
word_tokens_cta_comp[[i]] <- unnest_tokens(tibble_complaints[[i]], word_tokens, text, token = "words")
no_sw_compl[[i]] <- anti_join(word_tokens_cta_comp[[i]], stop_words, by = c("word_tokens" = "word"))
}
view(no_sw_compl[[2]])
no_sw_compl[[1]]$type <- "buses"
no_sw_compl[[2]]$type <- "trains"
view(no_sw_compl[[2]])
sentiment_nrc <- get_sentiments("nrc")
sentiment_afinn <- get_sentiments("afinn")
sentiment_bing <- get_sentiments("bing")
for (i in seq_along(no_sw_compl)) {
complaints_nrc <- left_join(no_sw_compl[[i]], sentiment_nrc, by = c("word_tokens" = "word"))
complaints_afinn <- left_join(no_sw_compl[[i]], sentiment_afinn, by = c("word_tokens" = "word"))
complaints_bing <- left_join(no_sw_compl[[i]], sentiment_bing, by = c("word_tokens" = "word"))
}
View(complaints_nrc)
view(no_sw_compl[[2]])
view(no_sw_compl[[1]])
ggplot(data = remove_missing(complaints_nrc, vars = c("afinn"))) +
geom_histogram(aes(nrc, fill = type), position = "dodge", stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "CTA Buses complaints")
ggplot(data = remove_missing(complaints_nrc, vars = c("afinn"))) +
geom_histogram(aes(complaints_nrc, fill = type), position = "dodge", stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "CTA Buses complaints")
View(complaints_nrc)
ggplot(data = remove_missing(complaints_nrc, vars = c("afinn"))) +
geom_histogram(aes(sentiment, fill = type), position = "dodge", stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "CTA Buses complaints")
ggplot(data = filter(complaints_nrc, !is.na(bing))) +
geom_histogram(aes(sentiment, fill = type), position = "dodge", stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "CTA Buses complaints")
ggplot(data = filter(complaints_nrc, !is.na(nrc))) +
geom_histogram(aes(sentiment, fill = type), position = "dodge", stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "CTA Buses complaints")
View(complaints_nrc)
ggplot(data = filter(complaints_nrc, !is.na(sentiment))) +
geom_histogram(aes(sentiment, fill = type), position = "dodge", stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "CTA Buses complaints")
View(complaints_afinn)
View(no_sw_compl)
view(no_sw_compl[[1]])
view(no_sw_compl[[2]])
View(complaints_nrc)
View(sentiment_nrc)
library(tidyverse)
library(tidytext)
rm(list = ls())
setwd("~/Documents/GitHub/final-project-james-emmanuel-oscar/Data")
#Using the comments on the complaints from the organization ctaction.org we are
#going to run a sentiment analysis and compare the differences between the two,
#buses and trains.
#separating buses and trains complaints from the excel file
complaints_buses <- readxl::read_excel("Aug-SeptCTAdata.xlsx", sheet = 1)
complaints_trains <- readxl::read_excel("Aug-SeptCTAdata.xlsx", sheet = 2)
#giving column names
colnames(complaints_buses) <- c("date", "route", "delay", "comments")
colnames(complaints_trains) <- c("date", "station", "region", "delay", "comments")
#around 50% of the complaints do not have a comment, so we will drop NAs from the
#comments and prepare the comments for the sentiment analysis
bus_comments <- complaints_buses %>%
drop_na(comments) %>%
subset(select = -c(date, route, delay))
train_comments <- complaints_trains %>%
drop_na(comments) %>%
subset(select = -c(date, station, region, delay))
#sentiment analysis for bus and train comments
cta_complaints <- list(bus_comments, train_comments)
text_complaints <- list()
tibble_complaints <- list()
word_tokens_cta_comp <- list()
no_sw_compl <- list()
for (i in seq_along(cta_complaints)) {
text_complaints[[i]] <- paste(unlist(cta_complaints[[i]][["comments"]]), collapse =" ")
tibble_complaints[[i]] <- tibble(text = text_complaints[[i]])
word_tokens_cta_comp[[i]] <- unnest_tokens(tibble_complaints[[i]], word_tokens, text, token = "words")
no_sw_compl[[i]] <- anti_join(word_tokens_cta_comp[[i]], stop_words, by = c("word_tokens" = "word"))
}
view(no_sw_compl[[2]])
no_sw_compl[[1]]$type <- "buses"
no_sw_compl[[2]]$type <- "trains"
#loading the sentiment analysis models
sentiment_nrc <- get_sentiments("nrc")
sentiment_afinn <- get_sentiments("afinn")
sentiment_bing <- get_sentiments("bing")
for (i in seq_along(no_sw_compl)) {
complaints_nrc <- right_join(no_sw_compl[[i]], sentiment_nrc, by = c("word_tokens" = "word"))
complaints_afinn <- right_join(no_sw_compl[[i]], sentiment_afinn, by = c("word_tokens" = "word"))
complaints_bing <- right_join(no_sw_compl[[i]], sentiment_bing, by = c("word_tokens" = "word"))
}
View(complaints_nrc)
library(tidyverse)
library(tidytext)
rm(list = ls())
setwd("~/Documents/GitHub/final-project-james-emmanuel-oscar/Data")
#Using the comments on the complaints from the organization ctaction.org we are
#going to run a sentiment analysis and compare the differences between the two,
#buses and trains.
#separating buses and trains complaints from the excel file
complaints_buses <- readxl::read_excel("Aug-SeptCTAdata.xlsx", sheet = 1)
complaints_trains <- readxl::read_excel("Aug-SeptCTAdata.xlsx", sheet = 2)
#giving column names
colnames(complaints_buses) <- c("date", "route", "delay", "comments")
colnames(complaints_trains) <- c("date", "station", "region", "delay", "comments")
#around 50% of the complaints do not have a comment, so we will drop NAs from the
#comments and prepare the comments for the sentiment analysis
bus_comments <- complaints_buses %>%
drop_na(comments) %>%
subset(select = -c(date, route, delay))
train_comments <- complaints_trains %>%
drop_na(comments) %>%
subset(select = -c(date, station, region, delay))
#sentiment analysis for bus and train comments
cta_complaints <- list(bus_comments, train_comments)
text_complaints <- list()
tibble_complaints <- list()
word_tokens_cta_comp <- list()
no_sw_compl <- list()
for (i in seq_along(cta_complaints)) {
text_complaints[[i]] <- paste(unlist(cta_complaints[[i]][["comments"]]), collapse =" ")
tibble_complaints[[i]] <- tibble(text = text_complaints[[i]])
word_tokens_cta_comp[[i]] <- unnest_tokens(tibble_complaints[[i]], word_tokens, text, token = "words")
no_sw_compl[[i]] <- anti_join(word_tokens_cta_comp[[i]], stop_words, by = c("word_tokens" = "word"))
}
view(no_sw_compl[[2]])
no_sw_compl[[1]]$type <- "buses"
no_sw_compl[[2]]$type <- "trains"
#loading the sentiment analysis models
sentiment_nrc <- get_sentiments("nrc")
sentiment_afinn <- get_sentiments("afinn")
sentiment_bing <- get_sentiments("bing")
#adding the sentiment analysis models
complaints_nrc <- list()
complaints_afinn <- list()
complaints_bing <- list()
for (i in seq_along(no_sw_compl)) {
complaints_nrc[[i]] <- left_join(no_sw_compl[[i]], sentiment_nrc, by = c("word_tokens" = "word"))
complaints_afinn[[i]] <- left_join(no_sw_compl[[i]], sentiment_afinn, by = c("word_tokens" = "word"))
complaints_bing[[i]] <- left_join(no_sw_compl[[i]], sentiment_bing, by = c("word_tokens" = "word"))
}
view(complaints_nrc[[2]])
View(complaints_nrc)
view(complaints_nrc[[2]])
plot_nrc <- rbind(complaints_nrc[[1]], complaints_nrc[[2]])
View(plot_nrc)
View(plot_nrc)
ggplot(data = filter(plot_nrc, !is.na(sentiment))) +
geom_histogram(aes(sentiment, fill = type), position = "dodge", stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "CTA Buses complaints")
plot_nrc <- rbind(complaints_nrc[[1]], complaints_nrc[[2]])
plot_afinn <- rbind(complaints_afinn[[1]], complaints_afinn[[2]])
plot_bing <- rbind(complaints_bing[[1]], complaints_bing[[2]])
View(plot_afinn)
View(plot_bing)
ggplot(data = filter(plot_afinn, !is.na(value))) +
geom_histogram(aes(value, fill = type), position = "dodge", stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "Afinn Analysis")
ggplot(data = filter(plot_bing, !is.na(sentiment))) +
geom_histogram(aes(sentiment, fill = type), position = "dodge", stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "Bing Analysis")
ggplot(data = filter(plot_nrc, !is.na(sentiment))) +
geom_histogram(aes(sentiment, fill = type), position = "dodge", stat = "identity") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "NRC Analysis")
ggplot(data = filter(plot_nrc, !is.na(sentiment))) +
geom_histogram(aes(sentiment, fill = type), position = "dodge", stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "NRC Analysis")
ggplot(data = filter(plot_afinn, !is.na(value))) +
geom_histogram(aes(value, fill = type), position = "dodge", stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "Afinn Analysis")
ggplot(data = filter(plot_bing, !is.na(sentiment))) +
geom_histogram(aes(sentiment, fill = type), position = "dodge", stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "Bing Analysis")
ggplot(data = filter(plot_nrc, !is.na(sentiment))) +
geom_histogram(aes(sentiment, fill = type), position = "dodge", stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "NRC Analysis")
ggplot(data = filter(plot_afinn, !is.na(value))) +
geom_histogram(aes(value, fill = type), position = "dodge", stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "Afinn Analysis")
ggplot(data = filter(plot_bing, !is.na(sentiment))) +
geom_histogram(aes(sentiment, fill = type), position = "dodge", stat = "count") +
scale_x_discrete(guide = guide_axis(angle = 45)) +
labs(title = "Bing Analysis")
